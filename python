
---

### üìÅ `data/loan_data.csv`

Use this dataset:  
https://www.kaggle.com/datasets/altruistdelhite04/loan-prediction-problem-dataset  

Contains columns:
- `Gender`, `Married`, `Education`, `ApplicantIncome`, `Credit_History`, `LoanAmount`, `Self_Employed`, `Property_Area`, `Loan_Status`

---

### üîß `train_model.py`
```python
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder
from sklearn.impute import SimpleImputer
import joblib

df = pd.read_csv("data/loan_data.csv")
df.drop(columns=["Loan_ID"], inplace=True)

# Handle categorical data
for col in df.select_dtypes(include='object').columns:
    df[col].fillna("Missing", inplace=True)
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])

# Fill numerical NA
df.fillna(df.mean(), inplace=True)

X = df.drop("Loan_Status", axis=1)
y = df["Loan_Status"]
y = LabelEncoder().fit_transform(y)  # Y: Y=1 if approved

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

model = RandomForestClassifier()
model.fit(X_train, y_train)

joblib.dump(model, "model.pkl")
print("‚úÖ Model saved as model.pkl")
